#BlueJ class context
comment0.target=DataAnalyzerGUI
comment0.text=\n\ DataAnalyzerGUI\ class\ that\ reads\ data\ regarding\ presidential\ candidates,\ and\ displays\ and\ analyzes\n\ the\ data\ in\ a\ graphical\ interface\ with\ 6\ buttons.\ Utilizes\ GUI\ components\ and\ JavaFX\ for\ media\ playback\n\n\ @author\ (124116)\n\ @version\ (5/21/2024)\n
comment1.params=
comment1.target=DataAnalyzerGUI()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ GUI\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment2.params=e
comment2.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment2.text=\n\ Responds\ to\ action\ events\ triggered\ by\ button\ presses\ in\ the\ GUI.\n\ It\ routes\ to\ different\ methods\ based\ on\ the\ command\ associated\ with\ the\ action\ event,\ using\ switch\ case.\n\n\ @param\ ActionEvent\ e\n
comment3.params=file
comment3.target=void\ loadData(java.lang.String)
comment3.text=\n\ Loads\ data\ from\ file\ into\ HashMap\n\ \n\ @param\ file\ \n\ @return\ void\ -\ none\n
comment4.params=
comment4.target=void\ analyzeData()
comment4.text=\n\ Analyzes\ loaded\ data\ to\ compute\ total\ votes\ and\ determine\ the\ winner.\n\ The\ method\ calculates\ total\ votes,\ percentage\ of\ votes\ for\ each\ nominee,\ and\ identifies\ the\ nominee\ with\ the\ maximum\ votes.\n\ \n\ @param\ none\n\ @return\ none\n
comment5.params=
comment5.target=void\ displayData()
comment5.text=\n\ Displays\ the\ loaded\ data\ on\ the\ GUI.\n\ It\ checks\ if\ data\ is\ loaded\ and\ displays\ each\ nominee's\ data\ in\ the\ text\ area.\n\ \n\ @param\ none\n\ @return\ none\n
comment6.params=
comment6.target=void\ graphData()
comment6.text=\n\ Visualizes\ the\ data\ as\ a\ graph.\n\ This\ method\ plots\ a\ basic\ graph\ showing\ votes\ of\ each\ nominee\ if\ data\ is\ loaded.\n\ \n\ @param\ none\n\ @return\ none\n
comment7.params=
comment7.target=void\ startSlideshow()
comment7.text=\n\ Starts\ a\ slideshow\ of\ images\ in\ a\ dedicated\ canvas.\n\ The\ slideshow\ displays\ each\ image\ for\ a\ set\ interval\ and\ cycles\ through\ a\ predefined\ list\ of\ images.\n\ @param\ none\n\ @return\ none\n
comment8.params=e
comment8.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment9.params=mp4
comment9.target=void\ video(java.lang.String)
comment9.text=\n\ Plays\ a\ video\ file\ in\ a\ dedicated\ window\ using\ JavaFX's\ media\ capabilities.\ The\ method\ sets\ up\ a\ JFrame\ containing\ a\ JFXPanel,\n\ initializes\ a\ MediaPlayer\ with\ the\ provided\ video\ file,\ and\ plays\ the\ video.\ The\ window\ automatically\ closes\ once\ the\ video\ playback\ completes.\n\n\ @param\ mp4\n\ @return\ void\ none\n
numComments=11
